diff --git a/CMakeLists.txt b/CMakeLists.txt
index faf2c24b8..5d1d8d139 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -200,10 +200,6 @@ if(QT_VERSION_MAJOR STREQUAL "6")
 	LIST(APPEND QT_EXTRA_COMPONENTS Core5Compat)
 	LIST(APPEND QT_TEST_LIBRARIES Qt::Core5Compat)
 
-	# QtWebKit doesn't work with Qt6, so no printing, no manual
-	set(NO_PRINTING ON)
-	set(NO_USERMANUAL ON)
-
 	# as of Qt 6.3 by default QtLocation isn't included, but one can
 	# build the module from source; so let's look if the user has installed
 	# it (or if a newer version is out that includes it, anyway)
@@ -254,12 +250,14 @@ if (SUBSURFACE_TARGET_EXECUTABLE MATCHES "DesktopExecutable")
 		add_definitions(-DNO_USERMANUAL)
 	else()
 		set(REQUEST_WEBKIT ON)
+		set(REQUEST_WEBENGINE ON)
 	endif()
 	if(NO_PRINTING)
 		message(STATUS "building without printing support")
 		add_definitions(-DNO_PRINTING)
 	else()
 		set(REQUEST_WEBKIT ON)
+		set(REQUEST_WEBENGINE ON)
 	endif()
 	if(REQUEST_WEBKIT)
 		# Because Qt5WebKitWidgets isn't a part of the "regular" Qt5, we can't get it the normal way
@@ -268,12 +266,42 @@ if (SUBSURFACE_TARGET_EXECUTABLE MATCHES "DesktopExecutable")
 			LIST(APPEND QT_EXTRA_COMPONENTS PrintSupport WebKitWidgets)
 			LIST(APPEND SUBSURFACE_LINK_LIBRARIES Qt5::WebKitWidgets)
 			message(STATUS "building with QtWebKit")
+			set(REQUEST_WEBENGINE OFF)
+		endif()
+	endif()
+	if(REQUEST_WEBENGINE)
+		if(USINGQT6)
+			find_package(Qt6WebEngineWidgets)
+			if(Qt6WebEngineWidgets_FOUND STREQUAL "1")
+				LIST(APPEND QT_EXTRA_COMPONENTS PrintSupport WebEngineWidgets)
+				LIST(APPEND SUBSURFACE_LINK_LIBRARIES Qt6::WebEngineWidgets)
+				message(STATUS "building with QtWebEngine, disabling printing support")
+				set(NO_PRINTING ON)
+				add_definitions(-DNO_PRINTING)
+				add_definitions(-DUSE_WEBENGINE)
+			else()
+				message(STATUS "didn't find QtWebEngine nor QtWebKit, building without user manual and printing support")
+				add_definitions(-DNO_PRINTING)
+				add_definitions(-DNO_USERMANUAL)
+				set(NO_PRINTING ON)
+				set(NO_USERMANUAL ON)
+			endif()
 		else()
-			message(STATUS "didn't find QtWebKit, building without user manual and printing support")
-			add_definitions(-DNO_PRINTING)
-			add_definitions(-DNO_USERMANUAL)
-			set(NO_PRINTING ON)
-			set(NO_USERMANUAL ON)
+			find_package(Qt5WebEngineWidgets)
+			if(Qt5WebEngineWidgets_FOUND STREQUAL "1")
+				LIST(APPEND QT_EXTRA_COMPONENTS PrintSupport WebEngineWidgets)
+				LIST(APPEND SUBSURFACE_LINK_LIBRARIES Qt5::WebEngineWidgets)
+				message(STATUS "building with QtWebEngine, disabling printing support")
+				set(NO_PRINTING ON)
+				add_definitions(-DNO_PRINTING)
+				add_definitions(-DUSE_WEBENGINE)
+			else()
+				message(STATUS "didn't find QtWebEngine nor QtWebKit, building without user manual and printing support")
+				add_definitions(-DNO_PRINTING)
+				add_definitions(-DNO_USERMANUAL)
+				set(NO_PRINTING ON)
+				set(NO_USERMANUAL ON)
+			endif()
 		endif()
 	endif()
 elseif (SUBSURFACE_TARGET_EXECUTABLE MATCHES "MobileExecutable")
diff --git a/desktop-widgets/usermanual.cpp b/desktop-widgets/usermanual.cpp
index a693cef2d..65c18fefa 100644
--- a/desktop-widgets/usermanual.cpp
+++ b/desktop-widgets/usermanual.cpp
@@ -2,6 +2,9 @@
 #include <QDesktopServices>
 #include <QShortcut>
 #include <QFile>
+#ifdef USE_WEBENGINE
+# include <QWebEngineFindTextResult>
+#endif
 
 #include "desktop-widgets/usermanual.h"
 #include "desktop-widgets/mainwindow.h"
@@ -10,7 +13,7 @@
 SearchBar::SearchBar(QWidget *parent): QWidget(parent)
 {
 	ui.setupUi(this);
-	#if defined(Q_OS_MAC) || defined(Q_OS_WIN)
+	#if defined(Q_OS_MAC) || defined(Q_OS_WIN) || defined(Q_OS_UNIX)
 	ui.findNext->setIcon(QIcon(":go-down-icon"));
 	ui.findPrev->setIcon(QIcon(":go-up-icon"));
 	ui.findClose->setIcon(QIcon(":window-close-icon"));
@@ -55,12 +58,23 @@ UserManual::UserManual(QWidget *parent) : QDialog(parent)
 	setWindowTitle(tr("User manual"));
 	setWindowIcon(QIcon(":subsurface-icon"));
 
+#ifdef USE_WEBENGINE
+	userManual = new QWebEngineView(this);
+	userManual->resize(700, 500);
+#else
 	userManual = new QWebView(this);
+#endif
 	QString colorBack = palette().highlight().color().name(QColor::HexRgb);
 	QString colorText = palette().highlightedText().color().name(QColor::HexRgb);
-	userManual->setStyleSheet(QString("QWebView { selection-background-color: %1; selection-color: %2; }")
+	userManual->setStyleSheet(QString(
+#ifdef USE_WEBENGINE
+				"QWebEngineView"
+#else
+				"QWebView"
+#endif
+				" { selection-background-color: %1; selection-color: %2; }")
 		.arg(colorBack).arg(colorText));
-	userManual->page()->setLinkDelegationPolicy(QWebPage::DelegateExternalLinks);
+	// XXX userManual->page()->setLinkDelegationPolicy(QWebEnginePage::DelegateExternalLinks);
 	QString searchPath = getSubsurfaceDataPath("Documentation");
 	if (searchPath.size()) {
 		// look for localized versions of the manual first
@@ -97,6 +111,18 @@ UserManual::UserManual(QWidget *parent) : QDialog(parent)
 	setLayout(vboxLayout);
 }
 
+#ifdef USE_WEBENGINE
+void UserManual::search(QString text, QWebEnginePage::FindFlags flags = QFlag(0))
+{
+	userManual->findText(text, flags,
+		[this](const QWebEngineFindTextResult &result) {
+			if (result.numberOfMatches() == 0)
+				searchBar->setStyleSheet("");
+			else
+				searchBar->setStyleSheet("QLineEdit{background: red;}");
+		});
+}
+#else
 void UserManual::search(QString text, QWebPage::FindFlags flags = QFlag(0))
 {
 	if (userManual->findText(text, QWebPage::FindWrapsAroundDocument | flags) || text.length() == 0) {
@@ -105,6 +131,7 @@ void UserManual::search(QString text, QWebPage::FindFlags flags = QFlag(0))
 		searchBar->setStyleSheet("QLineEdit{background: red;}");
 	}
 }
+#endif
 
 void UserManual::searchTextChanged(const QString& text)
 {
@@ -119,7 +146,11 @@ void UserManual::searchNext()
 
 void UserManual::searchPrev()
 {
+#ifdef USE_WEBENGINE
+	search(mLastText, QWebEnginePage::FindBackward);
+#else
 	search(mLastText, QWebPage::FindBackward);
+#endif
 }
 
 void UserManual::linkClickedSlot(const QUrl& url)
diff --git a/desktop-widgets/usermanual.h b/desktop-widgets/usermanual.h
index bb019f25b..df6682cf0 100644
--- a/desktop-widgets/usermanual.h
+++ b/desktop-widgets/usermanual.h
@@ -2,7 +2,11 @@
 #ifndef USERMANUAL_H
 #define USERMANUAL_H
 
-#include <QWebView>
+#ifdef USE_WEBENGINE
+# include <QWebEngineView>
+#else
+# include <QWebView>
+#endif
 #include <QDialog>
 #include "ui_searchbar.h"
 
@@ -45,7 +49,12 @@ slots:
 private:
 	SearchBar *searchBar;
 	QString mLastText;
+#ifdef USE_WEBENGINE
+	QWebEngineView *userManual;
+	void search(QString, QWebEnginePage::FindFlags);
+#else
 	QWebView *userManual;
 	void search(QString, QWebPage::FindFlags);
+#endif
 };
 #endif // USERMANUAL_H
diff --git a/map-widget/qmlmapwidgethelper.cpp b/map-widget/qmlmapwidgethelper.cpp
index f957fac49..add5be528 100644
--- a/map-widget/qmlmapwidgethelper.cpp
+++ b/map-widget/qmlmapwidgethelper.cpp
@@ -252,7 +252,11 @@ QString MapWidgetHelper::pluginObject()
 	QString lang = getUiLanguage().replace('_', '-');
 	QString cacheFolder = QString::fromStdString(system_default_directory() + "/googlemaps").replace("\\", "/");
 	return QStringLiteral("import QtQuick 2.0;"
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+			      "import QtLocation 6.0;"
+#else
 			      "import QtLocation 5.3;"
+#endif
 			      "Plugin {"
 			      "    id: mapPlugin;"
 			      "    name: 'googlemaps';"
