#!/bin/bash

set -e
set -x

declare -a errors

LAST_BUILD_ID=~/.sub.last.build.id
BUILDDIR=~/tmp
REPO=~/htdocs/dfx.at/subsurface
RELEASES='forky,~bpo14+1 sid, trixie,~bpo13+1 bookworm,~bpo12+1 bullseye,~bpo11+1'
ARCHS='amd64 i386'
#ARCHS=amd64

test -n "$SUBSURFACE_DEBIAN_SRCDIR"

cd "$BUILDDIR"
mkdir build.$$

OUTPUT_DIR="$BUILDDIR/artefacts.$$"
mkdir artefacts.$$
test -d "$OUTPUT_DIR"

cd build.$$

export VERSION=$(date +%Y%m%d%H%M)

export LAST_BUILD_ID
export THIS_BUILD_ID="$LAST_BUILD_ID.new"

set +e
"$SUBSURFACE_DEBIAN_SRCDIR"/beta/create-source-package
CODE=$?
set -e

if test "$CODE" -ne 0; then
	cd ..
	rm -rf build.$$
	rm -rf "$OUTPUT_DIR"
	if test "$CODE" -eq 42; then
		exit 0
	fi
	exit "$CODE"
fi

for RELEASE in $RELEASES; do
	IFS=, read -a REL_NAMES <<< "$RELEASE"
	RELEASE=${REL_NAMES[0]}
	REL_CODE=${REL_NAMES[1]}
	FULL_VER="$VERSION"-1"$REL_CODE"
	export RELEASE
	export REL_CODE
	export FULL_VER
	mkdir "$RELEASE"
	cd "$RELEASE"
	"$SUBSURFACE_DEBIAN_SRCDIR"/beta/create-debian-build
	for ARCH in $ARCHS; do
		echo building subsurface-beta_"$FULL_VER".dsc for "$RELEASE"-"$ARCH"
		set +e
		LOGFILE=build.log.$$."$RELEASE"-"$ARCH"
		sudo pbuilder build --buildplace ~/var/build --buildresult "$OUTPUT_DIR" --basetgz ~/var/cache/pbuilder/base-"$RELEASE"-"$ARCH".tgz --aptcache ~/var/cache/aptcache subsurface-beta_"$FULL_VER".dsc > "$LOGFILE" 2>&1
		CODE=$?
		set -e

		if test "$CODE" -eq 0; then
			echo build successful
			rm -f "$LOGFILE"
			reprepro -Vb "$REPO" -C main includedeb "$RELEASE" "$OUTPUT_DIR"/subsurface-beta_"$FULL_VER"_"$ARCH".deb
			reprepro -Vb "$REPO" -C main includedeb "$RELEASE" "$OUTPUT_DIR"/subsurface-beta-dbgsym_"$FULL_VER"_"$ARCH".deb
			test -f "$OUTPUT_DIR"/subsurface-beta-common_"$FULL_VER"_"$ARCH".deb && reprepro -Vb "$REPO" -C main includedeb "$RELEASE" "$OUTPUT_DIR"/subsurface-beta-common_"$FULL_VER"_"$ARCH".deb
			test -f "$OUTPUT_DIR"/subsurface-beta-downloader_"$FULL_VER"_"$ARCH".deb && reprepro -Vb "$REPO" -C main includedeb "$RELEASE" "$OUTPUT_DIR"/subsurface-beta-downloader_"$FULL_VER"_"$ARCH".deb
			test -f "$OUTPUT_DIR"/subsurface-beta-downloader-dbgsym_"$FULL_VER"_"$ARCH".deb && reprepro -Vb "$REPO" -C main includedeb "$RELEASE" "$OUTPUT_DIR"/subsurface-beta-downloader-dbgsym_"$FULL_VER"_"$ARCH".deb
		else
			echo build failed
			echo build log: "$LOGFILE"
			mv "$LOGFILE" ~/
			errors+=("build failed: $LOGFILE")
		fi
	done
	debsign "$OUTPUT_DIR"/subsurface-beta_"$FULL_VER".dsc
	reprepro -Vb "$REPO" -C main includedsc "$RELEASE" "$OUTPUT_DIR"/subsurface-beta_"$FULL_VER".dsc

	if test -d ~/var/arm-queue; then
		echo https://subsurface.dfx.at/pool/main/s/subsurface-beta/subsurface-beta_"$FULL_VER".dsc > ~/var/arm-queue/.subsurface-beta."$RELEASE".$$ || true
		mv ~/var/arm-queue/.subsurface-beta."$RELEASE".$$ ~/var/arm-queue/subsurface-beta."$RELEASE" || true
	fi
	cd ..
done

cd ..
rm -rf build.$$
rm -rf "$OUTPUT_DIR"

mv -f "$THIS_BUILD_ID" "$LAST_BUILD_ID"

if test ${#errors[@]} -gt 0; then
	echo errors:
	echo "${errors[@]}"
	exit 1
fi

exit 0
